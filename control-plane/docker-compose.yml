version: "3.8"

secrets:
  nginx.fullchain:
    file: ./setup/certbot/conf/live/${CONTROL_PLANE_DOMAIN}/fullchain.pem
  nginx.privkey:
    file: ./setup/certbot/conf/live/${CONTROL_PLANE_DOMAIN}/privkey.pem

services:
  backend:
    container_name: backend
    image: openjdk:11-jdk
    volumes:
      - ./backend/libs:/home/libs
    command:
      - /home/libs/entrypoint.sh
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}

  frontend:
    container_name: frontend
    image: node:16.20.2-bullseye
    volumes:
      - ./frontend:/home
    command:
      - /home/libs/entrypoint.sh
    restart: unless-stopped

  postgres:
    container_name: postgres
    image: postgres:${POSTGRES_VERSION}
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_ROOT_PASSWORD: ${POSTGRES_ROOT_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    restart: unless-stopped
    volumes:
      - ./database/postgres_init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./database/postgres/data:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}

  redis:
    container_name: redis
    image: redis:7.2-rc3
    restart: unless-stopped
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    command: redis-server --requirepass ${REDIS_PASSWORD}

  nginx:
    container_name: nginx
    image: nginx:${NGINX_VERSION}
    restart: unless-stopped
    volumes:
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
    secrets:
      - source: nginx.fullchain
        target: /usr/share/nginx/certs/fullchain.pem
      - source: nginx.privkey
        target: /usr/share/nginx/certs/privkey.pem
    depends_on:
      - backend
    ports:
      - 80:80
      - 443:443
